---
title: "Underwater Visual Surveys Dataset"
format: 
  html:
    theme: lux
    self-contained: true
    code-fold: true
    toc: true 
    toc-depth: 3
    toc-location: right
    number-sections: false
---

```{r setup, message = F, warning = F, fig.width = 10, fig.height = 10, echo = F}
options(scipen = 999)

library(PristineSeasR)
library(bigrquery)
library(gt)
library(gtExtras)
library(tibble)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(plotly)
library(lubridate)

knitr::opts_chunk$set(eval = F, warning = F, message = F, include = F, echo = F)

ps_paths <- PristineSeasR::get_sci_drive_paths()

prj_path <- file.path(ps_paths$projects, "legacy-db")

ps_data_path <- ps_paths$datasets
  
bigrquery::bq_auth(email = "marine.data.science@ngs.org")

project_id <- "pristine-seas"

bq_connection <- DBI::dbConnect(bigrquery::bigquery(), 
                                project = project_id)
```

### Overview

The `uvs/` dataset contains all data collected using Pristine Seas’ SCUBA-based underwater visual survey (UVS) protocols. These methods assess reef fish, benthic cover, mobile invertebrates, and coral recruits at spatially co-located sites using a standardized, depth-stratified design.

Each UVS site typically includes multiple stations across depth strata, with several survey protocols conducted in parallel.

The dataset structure balances:

- **Protocol modularity**: each sub-method (BLT, LPI, inverts, recruits) has dedicated tables
- **Spatial consistency**: shared sites and stations tables ensure alignment across protocols
	
This architecture enables both focused analyses (e.g., fish biomass by depth) and integrated reef assessments across taxa and trophic levels.

```text
uvs/
├── sites               # Deployment-level metadata for each UVS dive
├── stations            # Depth-stratified sampling units within each site
├── blt_stations        # Fish transect metadata (BLT)
├── blt_observations    # Raw fish counts
├── blt_biomass_by_taxa # Station-level biomass summaries
├── lpi_stations        # Benthic transect metadata
├── lpi_counts          # Raw point-intercept records
├── lpi_cover_by_taxa   # Percent cover summaries
├── inverts_stations    # Invertebrate transect metadata
├── inverts_counts      # Raw invertebrate observations
├── recruits_stations   # Coral recruit transect metadata
├── recruits_counts     # Raw coral recruit counts
```

------------------------------------------------------------------------

### uvs.sites

This table stores site-level metadata for all UVS dives. Each row represents a unique SCUBA deployment where one or more survey protocols (e.g., fish, benthic, invertebrates) were conducted.

It inherits all core fields from`expeditions.sites` (e.g., site ID, coordinates, date), and adds UVS-specific fields that describe habitat type, exposure, protection status, and the survey methods deployed at the site (@tbl-uvs.sites).

```{r eval = T, include = T}
#| label: tbl-uvs.sites
#| tbl-cap: "Additional fields in the `uvs.sites` table, beyond the core site schema."
#| 

core_site_fields <- tribble(
  ~field,         ~type,     ~required, ~description,
  "ps_site_id",   "STRING",  TRUE,      "Unique site ID (`exp_id_method_###`), e.g., `FJI_2025_uvs_001`",
  "exp_id",       "STRING",  TRUE,      "Foreign key to `expeditions.info`",
  "method",       "STRING",  TRUE,      "Field method used (e.g., `uvs`, `pbruv`, `edna`, `sub`)",
  "region",       "STRING",  TRUE,      "Broad geographic or administrative unit (e.g., Murat, Chocó, Tuamotu, Duff Islands).",
  "subregion",    "STRING",  TRUE,      "Intermediate feature within the region such as an atoll, island, gulf, or reef complex",
  "locality",     "STRING",  FALSE,     "Local named feature such as a village, bay, cove, reef (e.g., Lolieng, Ensenada Utría).",
  "date",         "DATE",    TRUE,      "Date of the site-level deployment in ISO 8601 format (`YYYY-MM-DD`)",
  "time",         "TIME",    TRUE,      "Local time of the deployment in 24-hour format (`HH:MM:SS`)",
  "latitude",     "FLOAT",   TRUE,      "Approximate latitude (decimal degrees, WGS84)",
  "longitude",    "FLOAT",   TRUE,      "Approximate longitude (decimal degrees, WGS84)",
  "lead",         "STRING",  TRUE,      "Name of the lead scientist or survey team lead",
  "notes",        "STRING",  FALSE,     "Optional comments, metadata, or field observations")


uvs.sites_fields <- tribble(
  ~field,         ~type,     ~required, ~description,
  "site_name",    "STRING",  FALSE,     "Local site name used in previous surveys or by local partners.",
  "habitat",      "STRING",  TRUE,      "Dominant habitat type (e.g., `fore reef`, `patch reef`, `fringing reef`).",
  "exposure",     "STRING",  TRUE,      "Wave and wind exposure (e.g., `windward`, `leeward`, `lagoon`).",
  "in_mpa",       "BOOLEAN", FALSE,     "TRUE if the site is located inside a marine protected area.",
  "blt",          "BOOLEAN", FALSE,     "TRUE if fish belt transects were conducted at this site.",
  "lpi",          "BOOLEAN", FALSE,     "TRUE if benthic point intercept surveys were conducted.",
  "inverts",      "BOOLEAN", FALSE,     "TRUE if invertebrate surveys were conducted.",
  "recruits",     "BOOLEAN", FALSE,     "TRUE if coral recruit transects were conducted.",
  "ysi",          "BOOLEAN", FALSE,     "TRUE if YSI environmental profiles were collected.",
  "photomosaic",  "BOOLEAN", FALSE,     "TRUE if a photomosaic survey was conducted.",
  "edna",         "BOOLEAN", FALSE,     "TRUE if eDNA samples were collected at the site."
)

uvs.sites_fields |>
  gt() |>
  cols_label(field = md("**Field**"),
             type = md("**Type**"),
             required = md("**Required**"),
             description = md("**Description**")) |> 
  cols_width(field ~ px(200),
             type ~ px(100),
             required ~ px(80),
             description ~ px(500)) |>
  data_color(columns = c(field),
             fn = scales::col_factor(palette = c("#f6f6f6"), domain = NULL) ) |>
  tab_options(table.font.size = px(13),
              table.width = pct(100)) |> 
  fmt_tf(columns = required, tf_style = "true-false") |> 
  fmt_markdown(columns = description) |> 
  gt_theme_nytimes()
```

::: {.callout-tip title="Controlled vocabulary"}

**`habitat`**

- *fore reef* — Outer reef slope exposed to ocean swell.
- *back reef* — Sheltered zone behind the reef crest  
- *fringing reef* — Reef growing directly from the shoreline  
- *patch reef* — Isolated reef outcrop within a lagoon or sandy area  
- *reef flat* — Shallow, flat reef section, often exposed at low tide  
- *channel* — Natural break or passage between reef structures  
- *seagrass* — Vegetated, soft-bottom habitat dominated by seagrasses  
- *rocky reef* — Reef formed by consolidated rock  
- *other* — Habitat not captured by the above categories  

**`exposure`**

- *windward* — Facing prevailing winds and swell  
- *leeward* — Sheltered from prevailing winds  
- *lagoon* — Within an enclosed or semi-enclosed reef lagoon  
- *other* — Exposure type not described above  

:::

```{r create-dataset, include = FALSE}
if (!bq_dataset_exists(bq_dataset("pristine-seas", "uvs"))) {
  bq_dataset_create(
    bq_dataset("pristine-seas", "uvs"),
    description = "Underwater visual survey (UVS) dataset. Includes site metadata, depth-stratified stations, and observations from fish BLT, benthic LPI, invertebrate, and coral recruit protocols."
  )
}


uvs_sites_all_fields <- bind_rows(core_site_fields, uvs.sites_fields) |>
  mutate(group = case_when(
    field %in% c("ps_site_id", "exp_id", "method")               ~ "Identifiers",
    field %in% c("region", "subregion", "locality", "site_name", "in_mpa") ~ "Spatial",
    field %in% c("date", "time")                                 ~ "Temporal",
    field %in% c("latitude", "longitude")                        ~ "Geolocation",
    field %in% c("habitat", "exposure", "protected")             ~ "Environmental",
    field %in% c("blt", "lpi", "inverts", "recruits", "ysi", "photomosaic", "edna") ~ "Survey Protocols",
    field == "lead"                                              ~ "Metadata",
    field == "notes"                                             ~ "Notes",
    TRUE ~ "Other"
  )) |>
  arrange(factor(group, levels = c(
    "Identifiers", "Spatial", "Temporal", "Geolocation",
    "Environmental", "Survey Protocols", "Metadata", "Notes"
  ))) |>
  select(-group)

# Define table schema
uvs.sites_schema <- uvs_sites_all_fields |>
  mutate(mode = if_else(required, "REQUIRED", "NULLABLE")) |>
  transmute(name = field,
            type = type,
            mode = mode,
            description = description) |>
  pmap(function(name, type, mode, description) {
    list(name = name, type = type, mode = mode, description = description)
  })

bq_table_create(bq_table(project_id, "uvs", "sites"),
                fields = uvs.sites_schema)
```

